buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
}

plugins {
    id 'java-library'
    id 'org.jetbrains.kotlin.jvm' version '1.3.61'
    id 'idea'
    id "com.jfrog.bintray" version "1.8.0"
    id "maven-publish"
}

sourceCompatibility = JavaVersion.VERSION_1_8

compileKotlin {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_1_8
}
compileTestKotlin {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_1_8
}

test {
    useJUnitPlatform()

    testLogging {
        events "skipped", "failed"
        showStandardStreams true
    }

    reports {
        html.enabled = true
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
}

jar {
    manifest {
        attributes('Implementation-Title': project.name,
                'Implementation-Version': project.version)
    }
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

repositories {
    jcenter()
    mavenCentral()
}

dependencies {
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation "org.jetbrains.kotlin:kotlin-reflect"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.3"

    testImplementation "org.jetbrains.kotlin:kotlin-test"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit_version"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$junit_version"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:$junit_version"
    testImplementation "org.assertj:assertj-core:3.11.1"
    testImplementation "io.mockk:mockk:1.9.3.kotlin12"


}
